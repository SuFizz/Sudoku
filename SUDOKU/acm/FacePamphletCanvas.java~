/*
 * File: FacePamphletCanvas.java
 * -----------------------------
 * This class represents the canvas on which the profiles in the social
 * network are displayed.  NOTE: This class does NOT need to update the
 * display when the window is resized.
 */


import acm.graphics.*;
import java.awt.*;
import java.util.*;

public class FacePamphletCanvas extends GCanvas 
					implements FacePamphletConstants {
	
	/** 
	 * Constructor
	 * This method takes care of any initialization needed for 
	 * the display
	 */
	public FacePamphletCanvas() {
		name = new GLabel(EMPTY_LABEL_TEXT);
		name.setFont(PROFILE_NAME_FONT);
		add(name,LEFT_MARGIN,TOP_MARGIN+name.getHeight());
		
		GLabel noimg = new GLabel("No Image");
		noimg.setFont();
		add(noimg, LEFT_MARGIN + IMAGE_WIDTH/2, TOP_MARGIN+ name.getHeight() + IMAGE_MARGIN + IMAGE_HEIGHT/2);

		GRect boundImg = new GRect(IMAGE_WIDTH,IMAGE_HEIGHT);
		add(boundImg, LEFT_MARGIN, TOP_MARGIN+ name.getHeight()+ IMAGE_MARGIN);
		
		img = null;
		
		status = new GLabel(EMPTY_LABEL_TEXT);
		status.setFont(PROFILE_STATUS_FONT);
		add(status,LEFT_MARGIN, APPLICATION_HEIGHT-STATUS_MARGIN);
		
		friendLabel = new GLabel(EMPTY_LABEL_TEXT);
		friendLabel.setFont(PROFILE_FRIEND_LABEL_FONT);
		add(friendLabel,getWidth()/2,TOP_MARGIN+name.getHeight());
		
//		friends = new ArrayList<GLabel>();	
		
		displaymsg = new GLabel(EMPTY_LABEL_TEXT);
		displaymsg.setFont(MESSAGE_FONT);
		add(displaymsg, getWidth()/2 - displaymsg.getWidth()/2, APPLICATION_HEIGHT - BOTTOM_MESSAGE_MARGIN);
		}

	/** 
	 * This method displays a message string near the bottom of the 
	 * canvas.  Every time this method is called, the previously 
	 * displayed message (if any) is replaced by the new message text 
	 * passed in.
	 */
	public void showMessage(String msg) {
		displaymsg.setLabel(msg);
		remove(displaymsg);
		add(displaymsg, getWidth()/2 - displaymsg.getWidth()/2, BOTTOM_MESSAGE_MARGIN);
	}
	
	
	/** 
	 * This method displays the given profile on the canvas.  The 
	 * canvas is first cleared of all existing items (including 
	 * messages displayed near the bottom of the screen) and then the 
	 * given profile is displayed.  The profile display includes the 
	 * name of the user from the profile, the corresponding image 
	 * (or an indication that an image does not exist), the status of
	 * the user, and a list of the user's friends in the social network.
	 */
	public void displayProfile(FacePamphletProfile profile) {
		name.setLabel(profile.getName());
		img = profile.getImage();
		if(img != null)
			add(img,LEFT_MARGIN,TOP_MARGIN+ name.getHeight()+ IMAGE_MARGIN);
		
		String statusStr = new String(profile.getStatus());
		if(statusStr != null)
			status.setLabel(profile.getName()+" is "+ statusStr);
		
		showMessage("Displaying"+profile.getName());
		
		friendLabel.setLabel("Friends :");
		
		Iterator<String> frens = profile.getFriends();
		
		int i =0;
		while(frens.hasNext())
			{
			GLabel fr = new GLabel(frens.next());
			fr.setFont(PROFILE_FRIEND_FONT);
			add(fr, APPLICATION_WIDTH/2,TOP_MARGIN+name.getHeight()+friendLabel.getHeight() + i*fr.getHeight());
			}
		
	}
	private GLabel name;
	private GImage img;
	private GLabel status;
	private GLabel friendLabel;
//	private ArrayList<GLabel> friends;
//	private GLabel applicationmsg;
	private GLabel displaymsg;
	
}
